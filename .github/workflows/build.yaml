name: "Package ATS"
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  lint_python_code:
    name: lint_python_code
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim-bookworm
    steps:
      - name: checkout_repo
        uses: actions/checkout@v4
      - name: install_poetry
        run: |
          pip install poetry
          poetry --version
      - name: install_python_dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry update --only=dev
          poetry install
      - name: lint_python_bandit
        run: |
          poetry run bandit -c pyproject.toml -r .
      - name: lint_python_black
        run: |
          poetry run black --check ./src/
      - name: lint_python_flake
        run: |
          poetry run flake8 ./src/
      - name: lint_python_mypy
        run: |
          poetry run mypy ./src/ --explicit-package-bases
      - name: lint_python_pylint
        run: |
          poetry run pylint ./src/ --recursive=y
      - name: lint_python_pyright
        run: |
          poetry run pyright ./src/
      - name: lint_python_ruff
        run: |
          poetry run ruff check --config pyproject.toml ./src/
      - name: lint_documentation_pydocstyle
        run: |
          poetry run pydocstyle
      - name: lint_python_isort
        run: |
          poetry run isort ./src/ --check

  lint_container_file:
    name: lint_container_build_file
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v4
      - name: lint_docker
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./docker/Dockerfile

  build_python_package:
    name: build_python_package
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim-bookworm
    needs: [lint_python_code, lint_container_file]
    steps:
      - name: checkout_repo
        uses: actions/checkout@v4
      - name: install_and_configure_poetry
        run: |
          pip install poetry
          poetry --version
      - name: install_and_configure_poetry
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run:
          export $APP_VERSION=$(poetry version --short)
          poetry config virtualenvs.in-project true
          poetry config repositories.pypi-repo $PYPY_URL
          poetry config pypi-token.pypi-repo $PYPY_TOKEN
          poetry publish --build
      - name: publish_package
        run:
          echo publish_package
  build_container_image:
    name: build_container_image
    needs: [build_python_package]
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim-bookworm
    steps:
      - name: build_image
        run:
          echo build container image!